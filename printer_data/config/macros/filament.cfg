[gcode_macro _EXTRUDE_TEMP_CHECK]
gcode:
  {% set vars = printer['gcode_macro _USER_VARIABLES'] %}
  {% set hotend = vars.filament_default_temp %}
  
  {% if not printer.extruder.can_extrude %}
    INFO MSG="Heating hotend..."
    M109 S{hotend}
  {% endif %}

[gcode_macro _SHAPE_FILAMENT_TIP]
gcode:
  {% set vars = printer['gcode_macro _USER_VARIABLES'] %}
  {% set sequence = vars.filament_tip_shaping_sequence %}

  SAVE_GCODE_STATE NAME=state_tip
  _EXTRUDE_TEMP_CHECK

  # Save and disable pressure advance
  {% set prev_pressure_advance = printer.extruder.pressure_advance | default(0) %}
  SET_PRESSURE_ADVANCE ADVANCE=0

  M82 ; E absolute
  G92 E0 ; E reset

  INFO MSG="Shaping tip..."
  {% for pos in sequence %}
    G1 E{pos} F3600
  {% endfor %}

  # Restore pressure advance
  SET_PRESSURE_ADVANCE ADVANCE={prev_pressure_advance}

  M400 ; wait

  RESTORE_GCODE_STATE NAME=state_tip

[gcode_macro _END_PRINT_RETRACT]
gcode:
  {% set vars = printer["gcode_macro _USER_VARIABLES"] %}
  {% set retract = vars.print_retract %}
  {% set rfeed = vars.print_retract_speed * 60 %}

  {% if printer.extruder.can_extrude %}
    INFO MSG="Retracting..."
    G92 E0 ; reset extruder
    G1 E-{retract} F{rfeed}

    M400 ; wait
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set vars = printer['gcode_macro _USER_VARIABLES'] %}
  {% set hotend = vars.filament_default_temp %}
  {% set len = vars.filament_drive_to_nozzle %}
  {% set retract = vars.print_retract %}
  {% set rfeed = vars.print_retract_speed * 60 %}
  {% set ufeed = vars.filament_unload_speed * 60 %}

  SAVE_GCODE_STATE NAME=state_unload

  _EXTRUDE_TEMP_CHECK
  _SHAPE_FILAMENT_TIP
  
  INFO MSG="Unloading..."
  M83 ; E relative
  G1 E-{retract} F{rfeed}
  G4 P3000 ; pause
  G1 E-{len} F{ufeed}

  M400 ; wait

  INFO MSG="Filament unloaded."

  RESTORE_GCODE_STATE NAME=state_unload

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set vars = printer['gcode_macro _USER_VARIABLES'] %}
  {% set temp = vars.filament_default_temp %}
  {% set len = vars.filament_drive_to_nozzle %}
  {% set extra = vars.filament_load_extra %}
  {% set retract = vars.variable_print_retract %}
  {% set lfeed = vars.filament_load_speed * 60 %}

  SAVE_GCODE_STATE NAME=state_load

  _EXTRUDE_TEMP_CHECK

  INFO MSG="Loading..."
  M83 ; E relative
  G1 E{len} F{lfeed} ; load length
  G1 E{extra} F{(lfeed / 2) | int} ; load extra

  M400 ; wait
  
  {% if printer.pause_resume.is_paused %}
    # Paused, do a standard retract
    G10
  {% else %}
    # We're not paused, retract as we would do at the end of a print
    _END_PRINT_RETRACT
  {% endif %}

  INFO MSG="Filament loaded."

  RESTORE_GCODE_STATE NAME=state_load

[gcode_macro _CHANGE_FILAMENT]
gcode:
  {% set vars = printer['gcode_macro _USER_VARIABLES'] %}
  {% set yspace = vars.variable_wipe_y_space %}
  
  {% set print_y_max = 300 %}

  {% if printer.exclude_object is defined and printer.exclude_object.objects%}
    # Compute max Y from exclude_object 
    {% set points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set print_y_max = points | map(attribute=1) | max %}
  {% else %}
    # Assume Y max is at the rear of bed
  {% endif %}

  {% set can_wipe = print_y_max < 300 - yspace %}

  SAVE_GCODE_STATE NAME=state_change

  {% if can_wipe %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=move_to_z VALUE={printer.toolhead.position.z}
  {% else %}
  {% endif %}

  PAUSE PARK=swap
  UNLOAD_FILAMENT

  INFO MSG="Waiting for filament change - use LOAD_FILAMENT then RESUME"
  _NOTIFY MSG="Filament change needed!"

  SET_GCODE_VARIABLE MACRO=_CHANGE_FILAMENT_PROMPT VARIABLE=filament_loaded VALUE=False

  RESTORE_GCODE_STATE NAME=state_change

[gcode_macro _CHANGE_FILAMENT_PROMPT]
variable_filament_loaded: False
variable_prev_z: 0
gcode:
  {% set cmd = params.CMD | default('none') %}

  {% set vars = printer['gcode_macro _USER_VARIABLES'] %}
  {% set lfeed = vars.filament_load_speed * 60 %}
  {% set extrude = vars.extrude_step %}

  {% if cmd == 'load' %}
    LOAD_FILAMENT
    SET_GCODE_VARIABLE MACRO=_CHANGE_FILAMENT_PROMPT VARIABLE=filament_loaded VALUE=True
    {% set filament_loaded = True %}
  {% elif cmd == 'unload' %}
    UNLOAD_FILAMENT
    SET_GCODE_VARIABLE MACRO=_CHANGE_FILAMENT_PROMPT VARIABLE=filament_loaded VALUE=False
    {% set filament_loaded = False %}
  {% elif cmd == 'extrude' %}
    G11 ; unretract
    M83 ; E relative
    G1 E{extrude} F{lfeed} ; extrude
    G10 ; retract
  {% elif cmd == 'resume' %}
    G11 ; unretract
    RESUME
  {% endif %}

  {% if cmd == 'resume' %}
    _CHANGE_FILAMENT_PROMPT_DISMISS
  {% else %}
    RESPOND TYPE=command MSG="action:prompt_begin Change filament"
    RESPOND TYPE=command MSG="action:prompt_text Change filament, load then resume."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    {% if filament_loaded %}
      RESPOND TYPE=command MSG="action:prompt_button Load filament|_CHANGE_FILAMENT_PROMPT CMD=unload|primary"
      RESPOND TYPE=command MSG="action:prompt_button Extrude more|_CHANGE_FILAMENT_PROMPT CMD=extrude|secondary"
    {% else %}
      RESPOND TYPE=command MSG="action:prompt_button Unload filament|_CHANGE_FILAMENT_PROMPT CMD=load|primary"
    {% endif %}
    RESPOND TYPE=command MSG="action:prompt_button Resume|_CHANGE_FILAMENT_PROMPT CMD=resume|info"
    RESPOND TYPE=command MSG="action:prompt_button Cancel|CANCEL_PRINT|error"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}

[gcode_macro _CHANGE_FILAMENT_PROMPT_DISMISS]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}
